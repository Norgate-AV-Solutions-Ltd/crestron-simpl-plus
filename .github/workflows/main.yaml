name: CI

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  setup:
    name: Setup

    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Show Environment
        run: |
          echo $PWD
          echo Path:
          echo $PATH
          echo
          echo whoami:
          echo $whoami
          echo
          echo Default Environment Variables:
          echo "CI: $CI"
          echo "GITHUB_ACTION: $GITHUB_ACTION"
          echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
          echo "GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_ACTOR_ID: $GITHUB_ACTOR_ID"
          echo "GITHUB_API_URL: $GITHUB_API_URL"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "GITHUB_ENV: $GITHUB_ENV"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
          echo "GITHUB_GRAPHQL_URL: $GITHUB_GRAPHQL_URL"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_JOB: $GITHUB_JOB"
          echo "GITHUB_PATH: $GITHUB_PATH"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GITHUB_REF_PROTECTED: $GITHUB_REF_PROTECTED"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_REPOSITORY_ID: $GITHUB_REPOSITORY_ID"
          echo "GITHUB_REPOSITORY_OWNER: $GITHUB_REPOSITORY_OWNER"
          echo "GITHUB_REPOSITORY_OWNER_ID: $GITHUB_REPOSITORY_OWNER_ID"
          echo "GITHUB_RETENTION_DAYS: $GITHUB_RETENTION_DAYS"
          echo "GITHUB_RUN_ATTEMPT: $GITHUB_RUN_ATTEMPT"
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
          echo "GITHUB_SERVER_URL: $GITHUB_SERVER_URL"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_STEP_SUMMARY: $GITHUB_STEP_SUMMARY"
          echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
          echo "GITHUB_WORKFLOW_REF: $GITHUB_WORKFLOW_REF"
          echo "GITHUB_WORKFLOW_SHA: $GITHUB_WORKFLOW_SHA"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "RUNNER_ARCH: $RUNNER_ARCH"
          echo "RUNNER_DEBUG: $RUNNER_DEBUG"
          echo "RUNNER_NAME: $RUNNER_NAME"
          echo "RUNNER_OS: $RUNNER_OS"
          echo "RUNNER_TEMP: $RUNNER_TEMP"
          echo "RUNNER_TOOL_CACHE: $RUNNER_TOOL_CACHE"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install (with cache)
        uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --network-timeout 1000000

  # release:
  #   name: Create Release

  #   runs-on: [ubuntu-latest]

  #   needs: [setup]

  #   if: github.ref == 'refs/heads/master'

  #   steps:
  #     - name: Conventional Changelog
  #       id: changelog
  #       uses: TriPSs/conventional-changelog-action@d360fad3a42feca6462f72c97c165d60a02d4bf2
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         tag-prefix: ""
  #         release-count: "0"
  #         output-file: "CHANGELOG.md"
  #         skip-on-empty: false
  #         create-summary: true

  #     - name: Create Github Release
  #       uses: actions/create-release@v1
  #       if: ${{ steps.changelog.outputs.skipped == 'false' }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.changelog.outputs.tag }}
  #         release_name: ${{ steps.changelog.outputs.tag }}
  #         body: ${{ steps.changelog.outputs.clean_changelog }}
  #         body_path: CHANGELOG.md
