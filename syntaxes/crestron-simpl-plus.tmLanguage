<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>usp</string>
        <string>usl</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x)
		 /\*\*(?!\*)
		|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))
	</string>
	<key>foldingStopMarker</key>
	<string>(?&lt;!\*)\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~U</string>
	<key>name</key>
	<string>Crestron</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#crestron_keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.usp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.usp</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted strings</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.usp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.usp</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted strings</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.usp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?ix)
        		^\s*(\#(?i:define_constant))\s+             # define
        		((?&lt;id&gt;[a-zA-Z_][a-zA-Z0-9_]*))  # macro name
        		(?:                              # and optionally:
        		    (\()                         # an open parenthesis
        		        (
        		            \s* \g&lt;id&gt; \s*       # first argument
        		            ((,) \s* \g&lt;id&gt; \s*)*  # additional arguments
        		            (?:\.\.\.)?          # varargs ellipsis?
        		        )
        		    (\))                         # a close parenthesis
        		)?
        	</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.preprocessor.usp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.usp</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.preprocessor.usp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.usp</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.usp</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>preprocessor definitions with values</string>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>name</key>
			<string>meta.preprocessor.macro.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.usp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)\s*(function|string_function|integer_function|push|change|release|event|eventhandler|callback function)\s+(\b[a-z0-9_]*\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function.usp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.usp</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function name highlighting</string>
			<key>end</key>
			<string>(\()|({)|(?&lt;=\})|(?=#)|(;)</string>
			<key>name</key>
			<string>meta.function.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>angle_brackets</key>
		<dict>
			<key>begin</key>
			<string>&lt;</string>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.angle-brackets.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#angle_brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
					<key>name</key>
					<string>comment.block.usp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*/.*\n</string>
					<key>name</key>
					<string>comment</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^// =(\s*.*?)\s*=\s*$\n?</string>
					<key>name</key>
					<string>comment.line</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>//</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
							<key>name</key>
							<string>comment</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>crestron_keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Crestron Compiler Directives</string>
					<key>match</key>
					<string>(?i)(#\b(analog_serial_expand|category|crestron_library|user_simplsharp_library|includepath|default_nonvolatile|default_volatile|define_constant|digital_expand|enable_dynamic|enable_stack_checking|enable_trace|encoding_ascii|encoding_utf16|encoding_inherit_from_parent|encoding_inherit_from_program|help|help_begin|help_end|help_pdf_file|hint|if_defined|if_not_defined|endif|if_series2|if_series3|if_series4|large_stack|max_internal_buffer_size|output_shift|print_to_trace|symbol_name|user_library)\b)</string>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Parameter Properties</string>
					<key>match</key>
					<string>(?i)(#\b(begin_parameter_properties|end_parameter_properties|begin_prop_full_description|end_prop_full_description|begin_prop_notes|end_prop_notes)\b)</string>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Joins</string>
					<key>match</key>
					<string>(?i)(#\b(analog_input_join|analog_output_join|digital_input_join|digital_output_join|string_input_join|string_output_join)\b)</string>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron I/O Declarations</string>
					<key>match</key>
					<string>(?i)\b(analog_input|analog_output|buffer_input|digital_input|digital_output|integer_parameter|long_integer_parameter|nonvolatile|signed_integer_parameter|signed_long_integer_parameter|string_input|string_output|string_parameter|structure|volatile)\b</string>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Socket Declarations</string>
					<key>match</key>
					<string>(?i)\b(tcp_client|tcp_server|udp_socket)\b</string>
					<key>name</key>
					<string>keyword.other.preprocessor.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Variable Types</string>
					<key>match</key>
					<string>(?i)\b(integer|long_integer|signed_integer|signed_long_integer|string|structure)\b</string>
					<key>name</key>
					<string>storage.type.usp</string>
				</dict>
				
				<dict>
					<key>comment</key>
					<string>Crestron Threadsafe</string>
					<key>match</key>
					<string>(?i)\b(threadsafe)\b</string>
					<key>name</key>
					<string>storage.type.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Skip Type</string>
					<key>match</key>
					<string>(?i)\b(_skip_)\b</string>
					<key>name</key>
					<string>storage.type.skip.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Boolean Types</string>
					<key>match</key>
					<string>(?i)\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Statements</string>
					<key>match</key>
					<string>(?i)\b(return|case|default)\b</string>
					<key>name</key>
					<string>keyword.control.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Exceptions</string>
					<key>match</key>
					<string>(?i)\b(try|catch)\b</string>
					<key>name</key>
					<string>keyword.control.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Exception Functions</string>
					<key>match</key>
					<string>(?i)\b(GetExceptionCode|GetExceptionMessage)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Conditionals</string>
					<key>match</key>
					<string>(?i)\b(break|cswitch|if|else|switch|do|until|for|while|to)\b</string>
					<key>name</key>
					<string>keyword.control.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Array Functions</string>
					<key>match</key>
					<string>(?i)\b(GetLastModifiedArrayIndex|GetNumArrayCols|GetNumArrayRows|GetNumStructureArrayCols|ResizeArray|ResizeStructureArray|SetArray)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Bit/Byte Functions</string>
					<key>match</key>
					<string>(?i)\b(bit|byte|high|highWord|low|LowerChar|LowWord|RotateLeft|RotateLeftLong|RotateRight|RotateRightLong|SetByte|UpperChar)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron CEN-OEM Functions</string>
					<key>match</key>
					<string>(?i)\b(_oem_break|_oem_cd|_oem_cts|_oem_dtr|_oem_long_break|_oem_max_string|_oem_pacing|_oem_rts|_oem_str_in|_oem_str_out)\b</string>
					<key>name</key>
					<string>support.function.cen-oem.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Data Conversion Functions</string>
					<key>match</key>
					<string>(?i)\b(atoi|atol|chr|HexToI|HexToL|HexToSI|HexToSL|itoa|itohex|ltoa|ltohex)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Socket Access Functions</string>
					<key>match</key>
					<string>(?i)\b(SocketConnect|SocketConnectClient|SocketDisconnect|SocketDisconnectClient|SocketGetAddressAsRequested|SocketGetPortNumber|SocketGetRemoteIPAddress|SocketGetSenderIPAddress|SocketGetStatus|SocketIsBroadcast|SocketIsMulticast|SocketReceive|SocketSend|SocketServerStartListen|SocketServerStopListen|SocketStatus|SocketUDP_Disable|SocketUDP_Enable)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Email Functions</string>
					<key>match</key>
					<string>(?i)\b(SendMail|SendMailAdvance|SendMailWithAttachments)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Encoding Functions</string>
					<key>match</key>
					<string>(?i)\b(ascii|GetEncoding|SetEncoding|Inherit|ToASCII)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron File Functions</string>
					<key>match</key>
					<string>(?i)\b(file_info|FileBOF|FileClose|FileDelete|FileDeleteShared|FileEOF|FileLength|FileOpen|FileOpenShared|FileRead|FileSeek|FileWrite|FindClose|FindFirst|FindFirstShared|FindNext|GetCurrentDirectory|IsDirectory|IsHidden|IsReadOnly|IsSystem|IsVolume|MakeDirectory|MakeDirectoryShared|ReadInteger|ReadIntegerArray|ReadLongInteger|ReadLongIntegerArray|ReadSignedInteger|ReadSignedIntegerArray|ReadSignedLongInteger|ReadSignedLongIntegerArray|ReadString|ReadStringArray|ReadStructure|RemoveDirectory|RemoveDirectoryShared|SetCurrentDirectory|StartFileOperations|WaitForNewDisk|WriteInteger|WriteIntegerArray|WriteLongInteger|WriteLongIntegerArray|WriteSignedInteger|WriteSignedIntegerArray|WriteSignedLongInteger|WriteSignedLongIntegerArray|WriteString|WriteStringArray|WriteStructure)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Math Functions</string>
					<key>match</key>
					<string>(?i)\b(abs|max|min|muldiv|smax|smin)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Ramp Functions</string>
					<key>match</key>
					<string>(?i)\b(CompareRampsByAttribute|CompareRampsByID|CreateRamp|GetRampInfo|InitializeRampInfo|InitializeRampInfoArray|IsRamping|ramp_info|StopRamp)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Random Number Functions</string>
					<key>match</key>
					<string>(?i)\b(random|rnd|seed)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron String Functions</string>
					<key>match</key>
					<string>(?i)\b(makestring|print|trace|ClearBuffer|CompareStrings|CompareStringsNoCase|find|FindNoCase|gather|GatherByLength|GetC|left|len|lower|mid|remove|RemoveByLength|ResizeString|ReverseFind|ReverseFindNoCase|right|SetString|upper)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron System Control Functions</string>
					<key>match</key>
					<string>(?i)\b(delay|ProcessLogic|pulse|TerminateEvent|WaitForInitializationComplete)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron System Initialization Functions</string>
					<key>match</key>
					<string>(?i)\b(GenerateUserError|GenerateUserNotice|GenerateUserWarning|GetCIP|GetCrestnet|GetModelNumber|GetProgramNumber|GetSeries|GetSlot|GetSymbolInstanceName|GetSymbolReferenceName|IsSignalDefined|MakeProgramFilename|SendCresnetPacket|SendPacketToCPU|SetCIP|SetCresnet|SetSlot|RegisterDelegate|RegisterEvent)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Time/Date Functions</string>
					<key>match</key>
					<string>(?i)\b(date|day|FileDate|FileDay|FileGetDateNum|FileGetDayOfWeekNum|FileGetHourNum|FileGetMinutesNum|FileGetMonthNum|FileGetSecondsNum|FileGetYearNum|FileMonth|FileTime|GetDateNum|GetDayOfWeekNum|GetDST|GetGMTOffset|GetHourNum|GetHSeconds|GetMinutesNum|GetMonthNum|GetSecondsNum|GetTicks|GetYearNum|month|SetClock|SetDate|SetGMTOffset|time)\b</string>
					<key>name</key>
					<string>support.function.usp</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Crestron Wait Functions</string>
					<key>match</key>
					<string>(?i)\b(CancelAllWait|CancelWait|PauseAllWait|PauseWait|ResumeAllWait|ResumeWait|RetimeWait|wait)\b</string>
					<key>name</key>
					<string>support.function.wait.usp</string>
				</dict>
			</array>
		</dict>
		<key>parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.parens.usp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8})</string>
					<key>name</key>
					<string>constant.character.escape.usp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.usp</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
    						(\d+\$)?                             # field (argument #)
    						[#0\- +']*                           # flags
    						[,;:_]?                              # separator character (AltiVec)
    						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
    						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
    						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
    						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
    					</string>
					<key>name</key>
					<string>constant.other.placeholder.usp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.usp</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.usp</string>
	<key>uuid</key>
	<string>26251B18-6B1D-11D9-AFDB-000D93589AF6</string>
</dict>
</plist>